mar()
library(datasets)
par()
par(mar())
par(mar
)
?par
example(points)
example(points)
?rpois
?gl
g<-gl(2,50)
g
g<-gl(2,50,labels=c("Male","Female"))
g
str(g)
?str
?as.frame
?as.
??as
??as.
nrow(pollution,pollution$pm25>12)
nrow(pollution,(pollution$pm25>12))
x<-rnorm(100)
y<-x+rnorm(100)
plot(x,y)
plot(x,y,type="n")
?plot
?points
x[g=="Male"]
y[g=="Male"]
x
pdf(file="myplot.pdf")
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.off
getwd()
dev.off()
dev.cur()
dataFile <- "./R/exdata-data-household_power_consumption/household_power_consumption.txt"
data <- read.table(dataFile, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
+subSetData <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
subSetData <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
View(subsetData)
View(subSetData)
globalActivePower <- as.numeric(subSetData$Global_active_power)
png("plot1.png", width=480, height=480)
hist(globalActivePower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
dev.off()
source('~/R/plot1.R')
?github
??github
?project
??project
datetime <- strptime(paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
datetime
source('~/R/plot2.R')
source('~/R/plot3.R')
plot(datetime, subMetering1, type="l", ylab="Energy Submetering", xlab="")
lines(datetime, subMetering2, type="l", col="red")
lines(datetime, subMetering3, type="l", col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=2.5, col=c("black", "red", "blue"))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1, lwd=2.5, col=c("black", "red", "blue"))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty2, lwd=2.5, col=c("black", "red", "blue"))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=2, lwd=2.5, col=c("black", "red", "blue"))
source('~/R/plot3.R')
source('~/R/plot3.R')
source('~/R/plot3.R')
par(mfrow)
par
par()
par(mfrow())
par(mfrow)
par("mfrow")
par(mfrow=(2,2))
par(mfrow=c(2,2))
source('~/R/plot4.R')
weekdays(Sys.Date())
Sys.setlocale("LC_TIME","English United States")
weekdays(Sys.Date())
Sys.setlocale("LC_TIME", "English")
weekdays(Sys.Date())
source('~/R/plot4.R')
source('~/R/plot3.R')
source('~/R/plot2.R')
source('~/R/plot2.R')
save.image("~/R/Enviroment.RData")
?xyplot
?xyplot()
library(lattice)
?xyplot()
library(datasets)
xyplot(Ozone~Wind, data=airquality)
?set.seed
?ret
?rep
set.seed(10)
x<-rnorm(100)
f<-rep(0:1,each=50)
f
y<-x+f-f*x+rnorm(100,sd=0.5)
y
f<-factor(f,labels=c("Group 1", "Group 2"))
f
xyplot(y~x|f,layout=c(2,1))
?xyplot
xyplot(y~x|f,layout=c(1,1))
xyplot(y~x|f,layout=c(1,2))
xyplot(y~x|f,layout=c(2,1))
xyplot(y~x|f,layout=c(3,1))
xyplot(y~x|f)
xyplot(y~x)
xyplot(y~x|f)
?xyplot
xyplot(y~x|f,panel=function(x,y,...)){}
xyplot(y~x|f,panel=function(x,y,...){panel.xyplot(x,y,...) panel.abline(h=median(y),lty=2)})
xyplot(y~x|f,panel=function(x,y,...){
panel.xyplot(x,y,...) panel.abline(h=median(y),lty=2)})
xyplot(y~x|f,panel=function(x,y,...){
panel.xyplot(x,y,...), panel.abline(h=median(y),lty=2)})
xyplot(y~x|f,panel = function(x,y, ...){
panel.xyplot(x,y,...), panel.abline(h=median(y),lty=2)})
xyplot(y~x|f,panel = function(x,y, ...){
panel.xyplot(x,y,...)})
xyplot(y~x|f,panel = function(x,y, ...){
panel.xyplot(x,y,...)
panel.abline(h=median(y))})
xyplot(y~x|f,panel = function(x,y, ...){
panel.xyplot(x,y,...)
panel.abline(h=median(y),lty=2)})
xyplot(y~x|f,panel = function(x,y, ...){
panel.xyplot(x,y,...)panel.abline(h=median(y),lty=2)})
xyplot(y~x|f,panel = function(x,y, ...){
panel.xyplot(x,y,...)
panel.abline(h=median(y),lty=2)})
xyplot(y~x|f,panel = function(x,y, ...){
panel.xyplot(x,y,...)
panel.lmline(x,y,col=2)})
?gglot2
library("ggplot2")
library(ggplot2)
?ggplot2
str(mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, color = drv)
qplot(displ, hwy, data=mpg, color = drv,geom=c("point"."smooth"))
qplot(displ, hwy, data=mpg, color = drv,geom=c("point","smooth"))
qplot(displ, hwy, data=mpg,geom=c("point","smooth"))
?qplot
qplot(hwy, data=mpg,fill=drv)
?qplot
qplot(hwy, data=mpg)
qplot(hwy, data=mpg,fill=drv)
qplot(hwy, data=mpg,color=drv)
qplot(hwy, data=mpg,fill=drv)
qplot(displ, hwy, data=mpg,facets=.~drv)
qplot(displ, hwy, data=mpg,facets=drv~.)
qplot(displ, hwy, data=mpg,facets=.~drv)
qplot(hwy, data=mpg,fill=drv)
str(maacs)
str(maacs)
?ggplot
testdat<-data.frame(x=1:100, y=rnorm(100))
heads(testdat)
head(testdat)
?cut
?par
par(mar=c(0,0,0,0))
x<rnorm(12,mean=rep(1:3,each=4),sd=0.2)
x<-rnorm(12,mean=rep(1:3,each=4),sd=0.2)
y<-rnorm(12,mean=rep(c(1,2,1),each=4),sd=0.2)
plot(x,y,col="blue",pch=19,cex=2)
text(x+0.05,y+0.5,labels=as.character(1:12))
dataFrame<-ddata.frame(x=x,y=y)
dataFrame<-data.frame(x=x,y=y)
dist(dataFrame)
set.seed(1234)
x<-rnorm(12,mean=rep(1:3,each=4),sd=0.2)
y<-rnorm(12,mean=rep(c(1,2,1),each=4),sd=0.2)
dist(dataFrame)
dataFrame<-data.frame(x=x,y=y)
dist(dataFrame)
distxy<-dist(dataFrame)
hClustering<-hclust(distxy)
plot(hClustering)
plot(hClustering)
?text
hClustering
plot(hClustering)
source('~/mypclust.R')
source('~/mypclust.R')
mypclust(hClustrering, lab=rep(1:3, each=4), lab.col=rep(1:3, each=4))
mypclust(hClustering, lab=rep(1:3, each=4), lab.col=rep(1:3, each=4))
source('~/mypclust.R')
mypclust(hClustering, lab=rep(1:3, each=4), lab.col=rep(1:3, each=4))
pbeta(0.75,2,1)
devtools::install_github("Rexamine/stringi")
install.packages('sringi')
install.packages('stringi')
install.packages('stringr')
library(stringr)
str_replace(v, "A", NA)
v <- c("A", "B", NA)
str_replace(v, "A", NA)
devtools::install_github("Rexamine/stringi")
v <- c("A", "B", NA)
str_replace(v, "A", NA)
library(stringr)
v <- c("A", "B", NA)
str_replace(v, "A", NA)
library(stringi)
v <- c("A", "B", NA)
str_replace(v, "A", NA)
shiny::runApp('R/Coursera-SwiftKey/Shiny_App/SwiftKey-Language-Modelling')
runApp('R/Coursera-SwiftKey/Shiny_App/SwiftKey-Language-Modelling')
runApp('R/Coursera-SwiftKey/Shiny_App/SwiftKey-Language-Modelling')
runApp('R/Coursera-SwiftKey/Shiny_App/SwiftKey-Language-Modelling')
View(Bigrams_all)
runApp('R/Coursera-SwiftKey/Shiny_App/SwiftKey-Language-Modelling')
runApp('R/Coursera-SwiftKey/Shiny_App/SwiftKey-Language-Modelling')
deployApp()
library(shinyapps)
deployApp()
getwd()
setwd(C:/Users/Pei-Chun/Documents/R/Coursera-SwiftKey/Shiny_App/SwiftKey-Language-Modelling)
setwd('C:/Users/Pei-Chun/Documents/R/Coursera-SwiftKey/Shiny_App/SwiftKey-Language-Modelling')
deployApp()
deployApp()
rsconnect::setAccountInfo(name='maginez', token='2F7F9A5BC1957F4402A4DEA701D43C77', secret='FQ0fSz0r+Le2rvFE6pbM6nc6M+Vsg2VSlqtqDKSV')
shinyAppDir('C:/Users/Pei-Chun/Documents/R/Coursera-SwiftKey/Shiny_App/SwiftKey-Language-Modelling')
deployApp()
runApp()
runApp('~/R/Coursera-SwiftKey/Simplified_App')
shinyAppDir('C:/Users/Pei-Chun/Documents/R/Coursera-SwiftKey/Shimplified_App')
shinyAppDir('C:/Users/Pei-Chun/Documents/R/Coursera-SwiftKey/Simplified_App')
runApp('~/R/Coursera-SwiftKey/Simplified_App')
runApp('~/R/Coursera-SwiftKey/Simplified_App')
setwd('C:/Users/Pei-Chun/Documents/R/Coursera-SwiftKey/Simplified_App')
runApp()
deployApp()
deployApp()
deployApp()
rsconnect::setAccountInfo(name='maginez', token='2F7F9A5BC1957F4402A4DEA701D43C77', secret='FQ0fSz0r+Le2rvFE6pbM6nc6M+Vsg2VSlqtqDKSV')
deployApp()
deployApp()
rm(list=ls(all=TRUE));gc(reset=TRUE);par(mfrow=c(1,1))
library(rsconnect)
library(shinyapps)
shiny::runApp()
setwd('C:/Users/Pei-Chun/Documents/R/Coursera-SwiftKey/Simplified_App')
deployApp()
deployApp()
deployApp()
deployApp()
setwd('C:/Users/Pei-Chun/Documents/R/Coursera-SwiftKey/')
setwd('C:/Users/Pei-Chun/Documents/R/Coursera-SwiftKey/Next_Word_Prediction')
setwd('C:/Users/Pei-Chun/Documents/R/Coursera-SwiftKey/Next_Word_Prediction_App')
shinyAppDir('C:/Users/Pei-Chun/Documents/R/Coursera-SwiftKey/Next_Word_Prediction_App')
deployApp()
deployApp()
terminateApp("Next_Word_Prediction_App")
rsconnect::setAccountInfo(name='magine', token='93FCD7825760D4622E006435336AF26F', secret='rXUBsay/+y216IDQtTbXOku0AkZShUw60uk71kEs')
deployApp()
rsconnect::setAccountInfo(name='magine', token='93FCD7825760D4622E006435336AF26F', secret='rXUBsay/+y216IDQtTbXOku0AkZShUw60uk71kEs')
deployApp()
rsconnect::setAccountInfo(name='magine', token='93FCD7825760D4622E006435336AF26F', secret='rXUBsay/+y216IDQtTbXOku0AkZShUw60uk71kEs')
deployApp()
